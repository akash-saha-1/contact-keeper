{"version":3,"sources":["context/auth/authContext.js","context/contact/contactContext.js","components/layout/navbar.js","components/contacts/contactFilter.js","components/contacts/contactForm.js","components/contacts/contactsItem.js","components/layout/spinner.gif","components/layout/spinner.js","components/contacts/contacts.js","components/pages/home.js","components/pages/about.js","context/types.js","context/contact/contactReducer.js","context/contact/contactState.js","context/auth/authReducer.js","utils/authToken.js","context/auth/authState.js","context/alert/alertContext.js","context/alert/alertReducer.js","context/alert/alertState.js","components/auth/register.js","components/auth/login.js","components/layout/alerts.js","components/routing/privateRouting.js","components/auth/resetPassword.js","App.js","index.js"],"names":["AuthContext","createContext","ContactContext","Navbar","title","icon","authContext","useContext","contactContext","isAuthenticated","logout","user","clearContacts","authLinks","name","href","onClick","className","guestLinks","to","prototype","PropTypes","string","isRequired","default","ContactFilter","text","useRef","filtered","filterContact","clearFilter","useEffect","current","value","ref","type","placeholder","onChange","e","target","ContactForm","addContact","clearCurrent","updateContact","setConact","email","phone","useState","contact","onSubmit","preventDefault","checked","ContactsItem","deleteContact","setCurrent","_id","style","float","charAt","toUpperCase","slice","object","Spinner","src","spinner","width","height","margin","display","alt","Contacts","contacts","getContacts","loading","length","TransitionGroup","map","CSSTransition","timeout","classNames","Home","loadUser","About","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","SET_LOADING","RESET_PASSWORD","RESET_FAIL","ContactReducer","state","action","payload","filter","errors","regex","RegExp","match","error","ContactState","props","useReducer","dispatch","a","axios","get","res","data","response","msg","config","headers","post","id","delete","put","Provider","children","AuthReducer","localStorage","setItem","token","removeItem","setAuthToken","defaults","common","AuthState","intialState","getItem","register","formData","login","resetPassword","clearErrors","AlertContext","AlertReducer","alert","AlertState","alerts","setAlert","uuid","setTimeout","Register","password","password2","setUser","alertContext","history","push","htmlFor","required","minLength","Login","console","log","Alerts","PrivateRoute","Component","component","rest","render","ResetPassword","App","path","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0d80c35f.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst AuthContext = createContext();\r\nexport default AuthContext;\r\n","import { createContext } from \"react\";\r\nconst ContactContext = createContext();\r\n\r\nexport default ContactContext;\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthContext from \"./../../context/auth/authContext\";\r\nimport ContactContext from \"./../../context/contact/contactContext\";\r\n\r\nconst Navbar = ({ title, icon }) => {\r\n  const authContext = useContext(AuthContext);\r\n  const contactContext = useContext(ContactContext);\r\n  const { isAuthenticated, logout, user } = authContext;\r\n  const { clearContacts } = contactContext;\r\n  const onLogout = () => {\r\n    logout();\r\n    clearContacts();\r\n  };\r\n  const authLinks = (\r\n    <Fragment>\r\n      <li>Hello {user && user.name}</li>\r\n      <li>\r\n        <a href=\"./login\" onClick={onLogout}>\r\n          <i className=\"fas fa-sign-out-alt\"></i>\r\n          <span className=\"hide-sm\">Logout</span>\r\n        </a>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n  const guestLinks = (\r\n    <Fragment>\r\n      <li>\r\n        <Link to=\"/about\">About</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/register\">Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/login\">Login</Link>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n  return (\r\n    <div className=\"navbar bg-primary\">\r\n      <h1>\r\n        <i className={icon}></i>\r\n      </h1>\r\n      <ul>{isAuthenticated ? authLinks : guestLinks}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nNavbar.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string,\r\n};\r\n\r\nNavbar.default = {\r\n  title: \"Contact Keeper\",\r\n  icon: \"fas fa-id-card-alt\",\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useContext, useRef, useEffect } from \"react\";\r\nimport ContactContext from \"./../../context/contact/contactContext\";\r\n\r\nconst ContactFilter = () => {\r\n  const contactContext = useContext(ContactContext);\r\n  const text = useRef(\"\");\r\n  const { filtered, filterContact, clearFilter } = contactContext;\r\n  useEffect(() => {\r\n    if (filtered === null) {\r\n      text.current.value = \"\";\r\n    }\r\n  });\r\n  const onChange = (e) => {\r\n    if (text.current.value !== \"\") {\r\n      filterContact(e.target.value);\r\n    } else {\r\n      clearFilter();\r\n    }\r\n  };\r\n  return (\r\n    <form>\r\n      <input\r\n        ref={text}\r\n        type=\"text\"\r\n        placeholder=\"Filter Contacts...\"\r\n        onChange={onChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactFilter;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport ContactContext from \"./../../context/contact/contactContext\";\r\n\r\nconst ContactForm = () => {\r\n  const contactContext = useContext(ContactContext);\r\n  const { addContact, current, clearCurrent, updateContact } = contactContext;\r\n  useEffect(() => {\r\n    if (current !== null) {\r\n      setConact(current);\r\n    } else {\r\n      setConact({\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        type: \"personal\",\r\n      });\r\n    }\r\n  }, [current, contactContext]);\r\n\r\n  const [contact, setConact] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    type: \"personal\",\r\n  });\r\n  const { name, email, phone, type } = contact;\r\n  const onChange = (e) => {\r\n    setConact({ ...contact, [e.target.name]: e.target.value });\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (current === null) {\r\n      addContact(contact);\r\n    } else {\r\n      updateContact(contact);\r\n    }\r\n    setConact({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      type: \"personal\",\r\n    });\r\n    clearCurrent();\r\n  };\r\n  const clearAll = () => {\r\n    clearCurrent();\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <h2 className=\"text-primary\">\r\n        {current ? \"Edit Contact\" : \"Add Contact\"}\r\n      </h2>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"name\"\r\n        value={name}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"phone\"\r\n        placeholder=\"Phone\"\r\n        value={phone}\r\n        onChange={onChange}\r\n      />\r\n      <h5>Contact Type</h5>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"type\"\r\n        value=\"personal\"\r\n        checked={type === \"personal\"}\r\n        onChange={onChange}\r\n      />\r\n      Personal{\" \"}\r\n      <input\r\n        type=\"radio\"\r\n        name=\"type\"\r\n        value=\"professional\"\r\n        checked={type === \"professional\"}\r\n        onChange={onChange}\r\n      />\r\n      Professional{\" \"}\r\n      <div>\r\n        <input\r\n          type=\"submit\"\r\n          className=\"btn btn-primary btn-block\"\r\n          value={current ? \"Edit Contact\" : \"Add Contact\"}\r\n        />\r\n      </div>\r\n      {current && (\r\n        <div>\r\n          <button className=\"btn-block btn-light\" onClick={clearAll}>\r\n            Clear\r\n          </button>{\" \"}\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactContext from \"../../context/contact/contactContext\";\r\n\r\nconst ContactsItem = ({ contact }) => {\r\n  const contactContext = useContext(ContactContext);\r\n  const { deleteContact, setCurrent, clearCurrent } = contactContext;\r\n  const { _id, name, email, phone, type } = contact;\r\n  const onDelete = () => {\r\n    deleteContact(_id);\r\n    clearCurrent();\r\n  };\r\n  return (\r\n    <div className=\"card bg-light\">\r\n      <h3 className=\"text-primary text-left\">\r\n        {name + \" \"}\r\n        <span\r\n          style={{ float: \"right\" }}\r\n          className={\r\n            \"badge \" +\r\n            (type === \"professional\" ? \"badge-success\" : \"badge-primary\")\r\n          }\r\n        >\r\n          {type.charAt(0).toUpperCase() + type.slice(1)}\r\n        </span>\r\n      </h3>\r\n      <ul className=\"list\">\r\n        {email && (\r\n          <li>\r\n            <i className=\"fas fa-envelop-open\"></i> {email}\r\n          </li>\r\n        )}\r\n        {phone && (\r\n          <li>\r\n            <i className=\"fas fa-phone\"></i> {phone}\r\n          </li>\r\n        )}\r\n      </ul>\r\n      <button\r\n        className=\"btn btn-dark btnbtn-sm\"\r\n        onClick={() => {\r\n          setCurrent(contact);\r\n        }}\r\n      >\r\n        Edit\r\n      </button>\r\n      <button className=\"btn btn-danger btnbtn-sm\" onClick={onDelete}>\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactsItem.prototype = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\nexport default ContactsItem;\r\n","export default __webpack_public_path__ + \"static/media/spinner.7f686c03.gif\";","import React, { Fragment } from \"react\";\r\nimport spinner from \"./spinner.gif\";\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      style={{\r\n        width: \"320px\",\r\n        height: \"150px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n      alt=\"Loading...\"\r\n    />\r\n  </Fragment>\r\n);\r\nexport default Spinner;\r\n","import React, { useContext, Fragment, useEffect } from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport ContactContext from \"../../context/contact/contactContext\";\r\nimport ContactsItem from \"./contactsItem\";\r\nimport Spinner from \"./../layout/spinner\";\r\n\r\nconst Contacts = () => {\r\n  const contactContext = useContext(ContactContext);\r\n  const { contacts, filtered, getContacts, loading } = contactContext;\r\n  useEffect(() => {\r\n    getContacts();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  if (contacts != null && contacts.length === 0 && !loading) {\r\n    return <h4>Please add a contact</h4>;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {contacts != null && !loading ? (\r\n        <TransitionGroup>\r\n          {filtered !== null\r\n            ? filtered.map((contact) => (\r\n                <CSSTransition\r\n                  key={contact._id}\r\n                  timeout={500}\r\n                  classNames=\"item\"\r\n                >\r\n                  <ContactsItem contact={contact} />\r\n                </CSSTransition>\r\n              ))\r\n            : contacts.map((contact) => (\r\n                <CSSTransition\r\n                  key={contact._id}\r\n                  timeout={500}\r\n                  classNames=\"item\"\r\n                >\r\n                  <ContactsItem contact={contact} />\r\n                </CSSTransition>\r\n              ))}\r\n        </TransitionGroup>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport ContactFilter from \"../contacts/contactFilter\";\r\nimport ContactForm from \"../contacts/contactForm\";\r\nimport Contacts from \"../contacts/contacts\";\r\nimport AuthContext from \"./../../context/auth/authContext\";\r\nconst Home = () => {\r\n  const authContext = useContext(AuthContext);\r\n  useEffect(() => {\r\n    authContext.loadUser();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <div className=\"grid-2\">\r\n      <div>\r\n        <ContactForm />\r\n      </div>\r\n      <div>\r\n        <ContactFilter />\r\n        <Contacts />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1>About this App</h1>\r\n      <p className=\"my-1\">\r\n        This is a Contact Keeper website. Which will save your contacts\r\n        securely.\r\n      </p>\r\n      <p className=\"bg-dark p\">\r\n        <strong>Version : 1.1</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","export const GET_CONTACTS = \"GET_CONTACTS\";\r\nexport const ADD_CONTACT = \"ADD_CONTACT\";\r\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\r\nexport const SET_CURRENT = \"SET_CURRENT\";\r\nexport const CLEAR_CURRENT = \"CLEAR_CURRENT\";\r\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\r\nexport const FILTER_CONTACTS = \"FILTER_CONTACTS\";\r\nexport const CLEAR_CONTACTS = \"CLEAR_CONTACTS\";\r\nexport const CLEAR_FILTER = \"CLEAR_FILTER\";\r\nexport const CONTACT_ERROR = \"CONTACT_ERROR\";\r\nexport const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\nexport const RESET_PASSWORD = \"RESET_PASSWOR\";\r\nexport const RESET_FAIL = \"RESET_FAIL\";\r\n","import {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n} from \"../types\";\r\n\r\nconst ContactReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case GET_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n        loading: false,\r\n      };\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact._id === action.payload._id ? action.payload : contact\r\n        ),\r\n        loading: false,\r\n      };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact._id !== action.payload\r\n        ),\r\n        loading: false,\r\n      };\r\n    case CLEAR_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: null,\r\n        filtered: null,\r\n        errors: null,\r\n        current: null,\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case FILTER_CONTACTS:\r\n      return {\r\n        ...state,\r\n        filtered: state.contacts.filter((contact) => {\r\n          const regex = new RegExp(`${action.payload}`, \"gi\"); //gi means global and insensitive\r\n          return (\r\n            contact.name.match(regex) ||\r\n            contact.email.match(regex) ||\r\n            contact.phone.match(regex)\r\n          );\r\n        }),\r\n        loading: false,\r\n      };\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filtered: null,\r\n      };\r\n    case CONTACT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default ContactReducer;\r\n","import React, { useReducer } from \"react\";\r\n//import { v4 as uuid } from \"uuid\";\r\nimport ContactContext from \"./contactContext\";\r\nimport ContactReducer from \"./contactReducer\";\r\nimport axios from \"axios\";\r\nimport {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n} from \"../types\";\r\n\r\nexport const ContactState = (props) => {\r\n  const intialState = {\r\n    contacts: null,\r\n    current: null,\r\n    filtered: null,\r\n    error: null,\r\n  };\r\n  const [state, dispatch] = useReducer(ContactReducer, intialState);\r\n  //Get Contacts\r\n  const getContacts = async (contact) => {\r\n    //contact.id = uuid();\r\n    try {\r\n      const res = await axios.get(\"/api/contacts\");\r\n      dispatch({ type: GET_CONTACTS, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: CONTACT_ERROR, payload: err.response.data.msg });\r\n    }\r\n  };\r\n  //Add contact\r\n  const addContact = async (contact) => {\r\n    //contact.id = uuid();\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post(\"/api/contacts\", contact, config);\r\n      dispatch({ type: ADD_CONTACT, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: CONTACT_ERROR, payload: err.response.data.msg });\r\n    }\r\n  };\r\n  //delete contact\r\n  const deleteContact = async (id) => {\r\n    try {\r\n      await axios.delete(`/api/contacts/${id}`);\r\n      dispatch({ type: DELETE_CONTACT, payload: id });\r\n    } catch (err) {\r\n      dispatch({ type: CONTACT_ERROR, payload: err.response.data.msg });\r\n    }\r\n  };\r\n  //update contact\r\n  const updateContact = async (contact) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.put(\r\n        `/api/contacts/${contact._id}`,\r\n        contact,\r\n        config\r\n      );\r\n      dispatch({ type: UPDATE_CONTACT, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: CONTACT_ERROR, payload: err.response.data.msg });\r\n    }\r\n  };\r\n  //clear Contacts\r\n  const clearContacts = () => dispatch({ type: CLEAR_CONTACTS });\r\n  //set current contact\r\n  const setCurrent = (contact) =>\r\n    dispatch({ type: SET_CURRENT, payload: contact });\r\n  //clear current contact\r\n  const clearCurrent = () => dispatch({ type: CLEAR_CURRENT });\r\n  //filter contact\r\n  const filterContact = (text) =>\r\n    dispatch({ type: FILTER_CONTACTS, payload: text });\r\n  //clear filter contact\r\n  const clearFilter = () => dispatch({ type: CLEAR_FILTER });\r\n\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        filtered: state.filtered,\r\n        error: state.error,\r\n        getContacts,\r\n        deleteContact,\r\n        addContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n        updateContact,\r\n        filterContact,\r\n        clearFilter,\r\n        clearContacts,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContactState;\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n  SET_LOADING,\r\n  RESET_FAIL,\r\n  RESET_PASSWORD,\r\n} from \"../types\";\r\n\r\nconst AuthReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n    case RESET_PASSWORD:\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case RESET_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n        error: action.payload,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: \"load\",\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AuthReducer;\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"x-auth-token\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import React, { useReducer } from \"react\";\r\nimport AuthContext from \"./authContext\";\r\nimport AuthReducer from \"./authReducer\";\r\nimport axios from \"axios\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  CLEAR_ERRORS,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  SET_LOADING,\r\n  RESET_PASSWORD,\r\n  RESET_FAIL,\r\n} from \"../types\";\r\nimport setAuthToken from \"../../utils/authToken\";\r\n\r\nexport const AuthState = (props) => {\r\n  const intialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    error: null,\r\n    user: null,\r\n  };\r\n  const [state, dispatch] = useReducer(AuthReducer, intialState);\r\n  //load user\r\n  const loadUser = async () => {\r\n    //load token in global header\r\n    if (localStorage.token) {\r\n      setAuthToken(localStorage.token);\r\n    }\r\n    try {\r\n      const res = await axios.get(\"/api/auth\");\r\n      dispatch({ type: USER_LOADED, payload: res.data });\r\n    } catch (error) {\r\n      dispatch({ type: AUTH_ERROR });\r\n    }\r\n  };\r\n  //register user\r\n  const register = async (formData) => {\r\n    dispatch({ type: SET_LOADING });\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post(\"/api/users\", formData, config);\r\n      dispatch({ type: REGISTER_SUCCESS, payload: res.data });\r\n      loadUser();\r\n    } catch (err) {\r\n      dispatch({ type: REGISTER_FAIL, payload: err.response.data.msg });\r\n    }\r\n  };\r\n  //login user\r\n  const login = async (formData) => {\r\n    dispatch({ type: SET_LOADING });\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post(\"/api/auth\", formData, config);\r\n      dispatch({ type: LOGIN_SUCCESS, payload: res.data });\r\n      loadUser();\r\n    } catch (err) {\r\n      dispatch({ type: LOGIN_FAIL, payload: err.response.data.msg });\r\n    }\r\n  };\r\n  //reset password\r\n  const resetPassword = async (formData) => {\r\n    dispatch({ type: SET_LOADING });\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/users/reset-password\",\r\n        formData,\r\n        config\r\n      );\r\n      dispatch({ type: RESET_PASSWORD, payload: res.data });\r\n      loadUser();\r\n    } catch (err) {\r\n      dispatch({ type: RESET_FAIL, payload: err.response.data.msg });\r\n    }\r\n  };\r\n  //logout user\r\n  const logout = () => {\r\n    dispatch({ type: LOGOUT });\r\n  };\r\n  //clear error\r\n  const clearErrors = () => {\r\n    dispatch({ type: CLEAR_ERRORS });\r\n  };\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        isAuthenticated: state.isAuthenticated,\r\n        loading: state.loading,\r\n        user: state.user,\r\n        error: state.error,\r\n        register,\r\n        login,\r\n        loadUser,\r\n        logout,\r\n        clearErrors,\r\n        resetPassword,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n","import { createContext } from \"react\";\r\n\r\nconst AlertContext = createContext();\r\nexport default AlertContext;\r\n","import { SET_ALERT, REMOVE_ALERT } from \"../types\";\r\n\r\nconst AlertReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return [...state, action.payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default AlertReducer;\r\n","import React, { useReducer } from \"react\";\r\nimport AlertContext from \"./alertContext\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport AlertReducer from \"./alertReducer\";\r\nimport { SET_ALERT, REMOVE_ALERT } from \"../types\";\r\n\r\nexport const AlertState = (props) => {\r\n  const intialState = [];\r\n  const [state, dispatch] = useReducer(AlertReducer, intialState);\r\n  //set Alert\r\n  const setAlert = (msg, type, timeout = 5000) => {\r\n    const id = uuid();\r\n    dispatch({ type: SET_ALERT, payload: { msg, type, id } });\r\n    setTimeout(() => {\r\n      dispatch({ type: REMOVE_ALERT, payload: id });\r\n    }, timeout);\r\n  };\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        alerts: state,\r\n        setAlert,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport AlertContext from \"./../../context/alert/alertContext\";\r\nimport AuthContext from \"./../../context/auth/authContext\";\r\nimport Spinner from \"./../layout/spinner\";\r\n\r\nconst Register = (props) => {\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  const alertContext = useContext(AlertContext);\r\n  const authContext = useContext(AuthContext);\r\n  const { setAlert } = alertContext;\r\n  const {\r\n    register,\r\n    error,\r\n    clearErrors,\r\n    isAuthenticated,\r\n    loading,\r\n  } = authContext;\r\n  const { name, email, password, password2 } = user;\r\n  const onChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      props.history.push(\"/\");\r\n    }\r\n    if (error === \"user already exists\") {\r\n      setAlert(error, \"danger\");\r\n      clearErrors();\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [error, isAuthenticated]);\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (name === \"\" || email === \"\" || password === \"\" || password2 === \"\") {\r\n      setAlert(\"Please enter all fields\", \"danger\");\r\n    } else if (password !== password2) {\r\n      setAlert(\"Passwords do not match\", \"danger\");\r\n    } else {\r\n      register({\r\n        name,\r\n        email,\r\n        password,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>\r\n        Account <span className=\"text-primary\">Register</span>\r\n      </h1>\r\n      {loading === \"load\" ? (\r\n        <Spinner />\r\n      ) : (\r\n        <form onSubmit={onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={onChange}\r\n              required\r\n              minLength=\"5\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password2\">Connfirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password2\"\r\n              value={password2}\r\n              onChange={onChange}\r\n              required\r\n              minLength=\"5\"\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Register\"\r\n            className=\"btn btn-primary btn-block\"\r\n          />\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport AuthContext from \"./../../context/auth/authContext\";\r\nimport AlertContext from \"./../../context/alert/alertContext\";\r\nimport Spinner from \"./../layout/spinner\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const alertContext = useContext(AlertContext);\r\n  const authContext = useContext(AuthContext);\r\n  const { setAlert } = alertContext;\r\n  const { login, error, clearErrors, isAuthenticated, loading } = authContext;\r\n  const { email, password } = user;\r\n  const onChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      props.history.push(\"/\");\r\n    }\r\n    if (error === \"Inavlid credentials\") {\r\n      setAlert(error, \"danger\");\r\n      clearErrors();\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [error, isAuthenticated]);\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (email === \"\" || password === \"\") {\r\n      setAlert(\"Please fill in all fields\", \"danger\");\r\n    } else {\r\n      login(user);\r\n    }\r\n    console.log(user);\r\n  };\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>\r\n        Account <span className=\"text-primary\">Login</span>\r\n      </h1>\r\n      {loading === \"load\" ? (\r\n        <Spinner />\r\n      ) : (\r\n        <form onSubmit={onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Login\"\r\n            className=\"btn btn-primary btn-block\"\r\n          />\r\n          <button className=\"btn btn-secondary btn-block\">\r\n            <Link to=\"/reset-password\">Reset Password</Link>\r\n          </button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useContext } from \"react\";\r\nimport AlertContext from \"./../../context/alert/alertContext\";\r\n\r\nconst Alerts = () => {\r\n  const alertContext = useContext(AlertContext);\r\n  const { alerts } = alertContext;\r\n  return (\r\n    alerts.length > 0 &&\r\n    alerts.map((alert) => (\r\n      <div key={alert.id} className={`alert alert-${alert.type}`}>\r\n        <i className=\"fas fa-info-circle\"></i>\r\n        {\" \" + alert.msg}\r\n      </div>\r\n    ))\r\n  );\r\n};\r\n\r\nexport default Alerts;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport AuthContext from \"./../../context/auth/authContext\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const authContext = useContext(AuthContext);\r\n  const { isAuthenticated, loading } = authContext;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !isAuthenticated && !loading ? (\r\n          <Redirect to=\"/login\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport AuthContext from \"./../../context/auth/authContext\";\r\nimport AlertContext from \"./../../context/alert/alertContext\";\r\nimport Spinner from \"./../layout/spinner\";\r\n\r\nconst ResetPassword = (props) => {\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  const alertContext = useContext(AlertContext);\r\n  const authContext = useContext(AuthContext);\r\n  const { setAlert } = alertContext;\r\n  const {\r\n    resetPassword,\r\n    error,\r\n    clearErrors,\r\n    isAuthenticated,\r\n    loading,\r\n  } = authContext;\r\n  const { email, password, password2 } = user;\r\n  const onChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      props.history.push(\"/\");\r\n    }\r\n    if (error === \"Inavlid EmailId\") {\r\n      setAlert(error, \"danger\", 5000);\r\n      clearErrors();\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [error, isAuthenticated]);\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (email === \"\" || password === \"\" || password2 === \"\") {\r\n      setAlert(\"Please fill in all fields\", \"danger\");\r\n    } else if (password !== password2) {\r\n      setAlert(\"Passwords do not match\", \"danger\");\r\n    } else {\r\n      resetPassword({\r\n        email,\r\n        password,\r\n      });\r\n    }\r\n    //console.log(user);\r\n  };\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>\r\n        Reset <span className=\"text-primary\">Password</span>\r\n      </h1>\r\n      {loading === \"load\" ? (\r\n        <Spinner />\r\n      ) : (\r\n        <form onSubmit={onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={onChange}\r\n              required\r\n              minLength=\"5\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password2\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password2\"\r\n              value={password2}\r\n              onChange={onChange}\r\n              required\r\n              minLength=\"5\"\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Reset Password\"\r\n            className=\"btn btn-primary btn-block\"\r\n          />\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import React, { Fragment } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/layout/navbar\";\nimport Home from \"./components/pages/home\";\nimport About from \"./components/pages/about\";\nimport ContactState from \"./context/contact/contactState\";\nimport AuthState from \"./context/auth/authState\";\nimport AlertState from \"./context/alert/alertState\";\nimport Register from \"./components/auth/register\";\nimport Login from \"./components/auth/login\";\nimport Alerts from \"./components/layout/alerts\";\nimport setAuthToken from \"./utils/authToken\";\nimport PrivateRoute from \"./components/routing/privateRouting\";\nimport ResetPassword from \"./components/auth/resetPassword\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  return (\n    <AuthState>\n      <AlertState>\n        <ContactState>\n          <Router>\n            <Fragment>\n              <Navbar />\n              <div className=\"container\">\n                <Alerts />\n                <Switch>\n                  <Route path=\"/about\" exact component={About} />\n                  <Route path=\"/register\" exact component={Register} />\n                  <Route path=\"/login\" exact component={Login} />\n                  <Route\n                    path=\"/reset-password\"\n                    exact\n                    component={ResetPassword}\n                  />\n                  <PrivateRoute path=\"/\" exact component={Home} />\n                </Switch>\n              </div>\n            </Fragment>\n          </Router>\n        </ContactState>\n      </AlertState>\n    </AuthState>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}